#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
    yamlweb - yaml2css

    Converts html-like yaml to css.

    todo:

    @copyright: 2015 by Mike Miller <mgmiller@studioxps>
    @license: GNU GPL 3+
'''
import sys
import logging

from yamlweb import __version__
from yamlweb.css import main


def setup():
    ''' Parse command-line and set up logging. '''
    from argparse import ArgumentParser, RawTextHelpFormatter, FileType
    parser = ArgumentParser(description=__doc__,
                            formatter_class=RawTextHelpFormatter)
    parser.add_argument('infile', nargs='*',
                        type=FileType('r'), default=sys.stdin,
                        help='Input file(s), defaults to stdin.')
    parser.add_argument('-e', '--encoding', metavar='EN', default='utf-8',
                        help='Set output encoding, default: %(default)r')
    parser.add_argument('-i', '--indent', type=int, default=0, metavar='N',
                        help='Number of spaces to indent css, '
                             'default: %(default)r')
    parser.add_argument('-o', '--output', metavar='F', default=sys.stdout,
                        help='Output file, defaults to stdout.')
    parser.add_argument('-O', '--to-css', action='store_true',
                        help='Convert extension to .css for output filename.')
    parser.add_argument('-v', '--verbose', action='store_const', dest='loglvl',
                        default=logging.INFO, const=logging.DEBUG)
    parser.add_argument('--version', action='version',
                        version='%(prog)s ' + __version__)

    # parse and validate
    args = parser.parse_args()

    # start logging
    logging.basicConfig(level=args.loglvl, stream=sys.stdout,
                        format='  %(levelname)-8.8s %(message)s')
    return args


if __name__ == '__main__':

    sys.exit(main(setup()))

